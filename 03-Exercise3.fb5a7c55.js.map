{"version":3,"sources":["js/03-Exercise3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","time","makeTransaction","transaction","delay","Promise","onSuccess","onError","canProcess","setTimeout","id","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";;;AAiDE,aAjDF,QAAA,qBACA,IAAMA,EAA4B,SAACC,EAAKC,GAC7BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGlDK,EAAO,EACLC,EAAkB,SAAAC,GAChBC,IAAAA,EAAQT,EAA0B,IAAK,KAEtC,OAAA,IAAIU,QAAQ,SAACC,EAAWC,GACrBC,IAAAA,EAAaV,KAAKE,SAAW,GAEvCS,WAAW,WAELD,IACFP,EAAOG,EACPE,EAAUH,EAAYO,GAAIT,IAIpBM,EAAQJ,EAAYO,KAE3BN,MAKCO,EAAa,SAACD,GAEfE,QAAQC,IAAmBH,eAAAA,OAAAA,EAAmBT,kBAAAA,OAAAA,EAA9C,QAGCa,EAAW,SAAAJ,GACfE,QAAQG,KAAqCL,gCAAAA,OAAAA,EAA7C,+BAIFR,EAAgB,CAAEQ,GAAI,GAAIM,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETZ,EAAgB,CAAEQ,GAAI,GAAIM,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETZ,EAAgB,CAAEQ,GAAI,GAAIM,OAAQ,KAC/BC,KAAKN,GACLO,MAAMJ,GAETZ,EAAgB,CAAEQ,GAAI,GAAIM,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ","file":"03-Exercise3.fb5a7c55.js","sourceRoot":"..\\src","sourcesContent":["import '../css/styles.css';\r\nconst randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n  \r\n  let time = 0;\r\n  const makeTransaction = transaction => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n  \r\n    return new Promise((onSuccess, onError) =>{\r\n        const canProcess = Math.random() > 0.3;\r\n\r\n    setTimeout(() => {\r\n       \r\n      if (canProcess) {\r\n        time = delay;\r\n        onSuccess(transaction.id, time);\r\n        // console.log(delay);\r\n              }\r\n\r\n              onError(transaction.id);\r\n      \r\n    }, delay);\r\n});\r\n  };\r\n\r\n  \r\n  const logSuccess = (id) => {\r\n    //   console.log(time);\r\n       console.log(`Transaction ${id} processed in ${time}ms`);\r\n  };\r\n  \r\n  const logError = id => {\r\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n  };\r\n  \r\n\r\n  makeTransaction({ id: 70, amount: 150 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 71, amount: 230 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 72, amount: 75 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 73, amount: 100 })\r\n    .then(logSuccess)\r\n    .catch(logError);"]}